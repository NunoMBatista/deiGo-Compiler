Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE IDENTIFIER SEMICOLON Declarations

    2 Declarations: Declarations FuncDecl SEMICOLON
    3             | Declarations VarDecl SEMICOLON
    4             | ε

    5 VarDecl: VAR VarSpec
    6        | VAR LPAR VarSpec SEMICOLON RPAR

    7 VarSpec: IDENTIFIER Type
    8        | IDENTIFIER COMMA VarSpec

    9 Type: INT
   10     | FLOAT32
   11     | BOOL
   12     | STRING

   13 FuncDecl: FUNC IDENTIFIER LPAR OptFuncParams RPAR OptType FuncBody

   14 OptFuncParams: FuncParams
   15              | ε

   16 OptType: Type
   17        | ε

   18 FuncParams: IDENTIFIER Type
   19           | FuncParams COMMA IDENTIFIER Type

   20 FuncBody: LBRACE VarsAndStatements RBRACE

   21 VarsAndStatements: VarsAndStatements SEMICOLON
   22                  | VarsAndStatements VarDecl SEMICOLON
   23                  | VarsAndStatements Statement SEMICOLON
   24                  | ε

   25 Statement: IDENTIFIER ASSIGN Expr
   26          | LBRACE StarStatementSc RBRACE
   27          | IF Expr LBRACE StarStatementSc RBRACE OptElse
   28          | FOR OptExpr LBRACE StarStatementSc RBRACE
   29          | RETURN OptExpr
   30          | FuncInvocation
   31          | ParseArgs
   32          | PRINT LPAR Expr RPAR
   33          | PRINT LPAR STRLIT RPAR
   34          | error

   35 StarStatementSc: StarStatementSc Statement SEMICOLON
   36                | ε

   37 OptElse: ELSE LBRACE StarStatementSc RBRACE
   38        | ε

   39 OptExpr: Expr
   40        | ε

   41 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   43 FuncInvocation: IDENTIFIER LPAR PosExpr RPAR
   44               | IDENTIFIER LPAR error RPAR

   45 PosExpr: Expr
   46        | Expr COMMA PosExpr
   47        | ε

   48 Expr: Expr OR Expr
   49     | Expr AND Expr
   50     | Expr LT Expr
   51     | Expr GT Expr
   52     | Expr EQ Expr
   53     | Expr NE Expr
   54     | Expr LE Expr
   55     | Expr GE Expr
   56     | Expr PLUS Expr
   57     | Expr MINUS Expr
   58     | Expr STAR Expr
   59     | Expr DIV Expr
   60     | Expr MOD Expr
   61     | MINUS Expr
   62     | NOT Expr
   63     | PLUS Expr
   64     | NATURAL
   65     | DECIMAL
   66     | IDENTIFIER
   67     | FuncInvocation
   68     | LPAR Expr RPAR
   69     | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 34 42 44 69
    SEMICOLON (258) 1 2 3 6 21 22 23 35
    COMMA (259) 8 19 41 42 46
    STAR (260) 58
    DIV (261) 59
    MINUS (262) 57 61
    PLUS (263) 56 63
    EQ (264) 52
    GE (265) 55
    GT (266) 51
    LBRACE (267) 20 26 27 28 37
    LE (268) 54
    LPAR (269) 6 13 32 33 41 42 43 44 68 69
    LSQ (270) 41
    LT (271) 50
    MOD (272) 60
    NE (273) 53
    NOT (274) 62
    AND (275) 49
    OR (276) 48
    PACKAGE (277) 1
    ELSE (278) 37
    FOR (279) 28
    IF (280) 27
    VAR (281) 5 6
    INT (282) 9
    FLOAT32 (283) 10
    BOOL (284) 11
    STRING (285) 12
    PRINT (286) 32 33
    PARSEINT (287) 41 42
    FUNC (288) 13
    CMDARGS (289) 41
    BLANKID (290) 41 42
    RBRACE (291) 20 26 27 28 37
    RPAR (292) 6 13 32 33 41 42 43 44 68 69
    RETURN (293) 29
    RSQ (294) 41
    ASSIGN (295) 25 41 42
    STRLIT <lexeme> (296) 33
    RESERVED <lexeme> (297)
    IDENTIFIER <lexeme> (298) 1 7 8 13 18 19 25 41 42 43 44 66
    NATURAL <lexeme> (299) 64
    DECIMAL <lexeme> (300) 65
    LOW (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    Program <node> (48)
        on left: 1
        on right: 0
    Declarations <node> (49)
        on left: 2 3 4
        on right: 1 2 3
    VarDecl <node> (50)
        on left: 5 6
        on right: 3 22
    VarSpec <node> (51)
        on left: 7 8
        on right: 5 6 8
    Type <node> (52)
        on left: 9 10 11 12
        on right: 7 16 18 19
    FuncDecl <node> (53)
        on left: 13
        on right: 2
    OptFuncParams <node> (54)
        on left: 14 15
        on right: 13
    OptType <node> (55)
        on left: 16 17
        on right: 13
    FuncParams <node> (56)
        on left: 18 19
        on right: 14 19
    FuncBody <node> (57)
        on left: 20
        on right: 13
    VarsAndStatements <node> (58)
        on left: 21 22 23 24
        on right: 20 21 22 23
    Statement <node> (59)
        on left: 25 26 27 28 29 30 31 32 33 34
        on right: 23 35
    StarStatementSc <node> (60)
        on left: 35 36
        on right: 26 27 28 35 37
    OptElse <node> (61)
        on left: 37 38
        on right: 27
    OptExpr <node> (62)
        on left: 39 40
        on right: 28 29
    ParseArgs <node> (63)
        on left: 41 42
        on right: 31
    FuncInvocation <node> (64)
        on left: 43 44
        on right: 30 67
    PosExpr <node> (65)
        on left: 45 46 47
        on right: 43 46
    Expr <node> (66)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
        on right: 25 27 32 39 41 45 46 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 68


State 0

    0 $accept: • Program $end
    1 Program: • PACKAGE IDENTIFIER SEMICOLON Declarations

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE • IDENTIFIER SEMICOLON Declarations

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE IDENTIFIER • SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: PACKAGE IDENTIFIER SEMICOLON • Declarations
    2 Declarations: • Declarations FuncDecl SEMICOLON
    3             | • Declarations VarDecl SEMICOLON
    4             | ε •

    $default  reduce using rule 4 (Declarations)

    Declarations  go to state 6


State 6

    1 Program: PACKAGE IDENTIFIER SEMICOLON Declarations •  [$end]
    2 Declarations: Declarations • FuncDecl SEMICOLON
    3             | Declarations • VarDecl SEMICOLON
    5 VarDecl: • VAR VarSpec
    6        | • VAR LPAR VarSpec SEMICOLON RPAR
   13 FuncDecl: • FUNC IDENTIFIER LPAR OptFuncParams RPAR OptType FuncBody

    VAR   shift, and go to state 7
    FUNC  shift, and go to state 8

    $default  reduce using rule 1 (Program)

    VarDecl   go to state 9
    FuncDecl  go to state 10


State 7

    5 VarDecl: VAR • VarSpec
    6        | VAR • LPAR VarSpec SEMICOLON RPAR
    7 VarSpec: • IDENTIFIER Type
    8        | • IDENTIFIER COMMA VarSpec

    LPAR        shift, and go to state 11
    IDENTIFIER  shift, and go to state 12

    VarSpec  go to state 13


State 8

   13 FuncDecl: FUNC • IDENTIFIER LPAR OptFuncParams RPAR OptType FuncBody

    IDENTIFIER  shift, and go to state 14


State 9

    3 Declarations: Declarations VarDecl • SEMICOLON

    SEMICOLON  shift, and go to state 15


State 10

    2 Declarations: Declarations FuncDecl • SEMICOLON

    SEMICOLON  shift, and go to state 16


State 11

    6 VarDecl: VAR LPAR • VarSpec SEMICOLON RPAR
    7 VarSpec: • IDENTIFIER Type
    8        | • IDENTIFIER COMMA VarSpec

    IDENTIFIER  shift, and go to state 12

    VarSpec  go to state 17


State 12

    7 VarSpec: IDENTIFIER • Type
    8        | IDENTIFIER • COMMA VarSpec
    9 Type: • INT
   10     | • FLOAT32
   11     | • BOOL
   12     | • STRING

    COMMA    shift, and go to state 18
    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22

    Type  go to state 23


State 13

    5 VarDecl: VAR VarSpec •

    $default  reduce using rule 5 (VarDecl)


State 14

   13 FuncDecl: FUNC IDENTIFIER • LPAR OptFuncParams RPAR OptType FuncBody

    LPAR  shift, and go to state 24


State 15

    3 Declarations: Declarations VarDecl SEMICOLON •

    $default  reduce using rule 3 (Declarations)


State 16

    2 Declarations: Declarations FuncDecl SEMICOLON •

    $default  reduce using rule 2 (Declarations)


State 17

    6 VarDecl: VAR LPAR VarSpec • SEMICOLON RPAR

    SEMICOLON  shift, and go to state 25


State 18

    7 VarSpec: • IDENTIFIER Type
    8        | • IDENTIFIER COMMA VarSpec
    8        | IDENTIFIER COMMA • VarSpec

    IDENTIFIER  shift, and go to state 12

    VarSpec  go to state 26


State 19

    9 Type: INT •

    $default  reduce using rule 9 (Type)


State 20

   10 Type: FLOAT32 •

    $default  reduce using rule 10 (Type)


State 21

   11 Type: BOOL •

    $default  reduce using rule 11 (Type)


State 22

   12 Type: STRING •

    $default  reduce using rule 12 (Type)


State 23

    7 VarSpec: IDENTIFIER Type •

    $default  reduce using rule 7 (VarSpec)


State 24

   13 FuncDecl: FUNC IDENTIFIER LPAR • OptFuncParams RPAR OptType FuncBody
   14 OptFuncParams: • FuncParams
   15              | ε •  [RPAR]
   18 FuncParams: • IDENTIFIER Type
   19           | • FuncParams COMMA IDENTIFIER Type

    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 15 (OptFuncParams)

    OptFuncParams  go to state 28
    FuncParams     go to state 29


State 25

    6 VarDecl: VAR LPAR VarSpec SEMICOLON • RPAR

    RPAR  shift, and go to state 30


State 26

    8 VarSpec: IDENTIFIER COMMA VarSpec •

    $default  reduce using rule 8 (VarSpec)


State 27

    9 Type: • INT
   10     | • FLOAT32
   11     | • BOOL
   12     | • STRING
   18 FuncParams: IDENTIFIER • Type

    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22

    Type  go to state 31


State 28

   13 FuncDecl: FUNC IDENTIFIER LPAR OptFuncParams • RPAR OptType FuncBody

    RPAR  shift, and go to state 32


State 29

   14 OptFuncParams: FuncParams •  [RPAR]
   19 FuncParams: FuncParams • COMMA IDENTIFIER Type

    COMMA  shift, and go to state 33

    $default  reduce using rule 14 (OptFuncParams)


State 30

    6 VarDecl: VAR LPAR VarSpec SEMICOLON RPAR •

    $default  reduce using rule 6 (VarDecl)


State 31

   18 FuncParams: IDENTIFIER Type •

    $default  reduce using rule 18 (FuncParams)


State 32

    9 Type: • INT
   10     | • FLOAT32
   11     | • BOOL
   12     | • STRING
   13 FuncDecl: FUNC IDENTIFIER LPAR OptFuncParams RPAR • OptType FuncBody
   16 OptType: • Type
   17        | ε •  [LBRACE]

    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22

    $default  reduce using rule 17 (OptType)

    Type     go to state 34
    OptType  go to state 35


State 33

   19 FuncParams: FuncParams COMMA • IDENTIFIER Type

    IDENTIFIER  shift, and go to state 36


State 34

   16 OptType: Type •

    $default  reduce using rule 16 (OptType)


State 35

   13 FuncDecl: FUNC IDENTIFIER LPAR OptFuncParams RPAR OptType • FuncBody
   20 FuncBody: • LBRACE VarsAndStatements RBRACE

    LBRACE  shift, and go to state 37

    FuncBody  go to state 38


State 36

    9 Type: • INT
   10     | • FLOAT32
   11     | • BOOL
   12     | • STRING
   19 FuncParams: FuncParams COMMA IDENTIFIER • Type

    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22

    Type  go to state 39


State 37

   20 FuncBody: LBRACE • VarsAndStatements RBRACE
   21 VarsAndStatements: • VarsAndStatements SEMICOLON
   22                  | • VarsAndStatements VarDecl SEMICOLON
   23                  | • VarsAndStatements Statement SEMICOLON
   24                  | ε •

    $default  reduce using rule 24 (VarsAndStatements)

    VarsAndStatements  go to state 40


State 38

   13 FuncDecl: FUNC IDENTIFIER LPAR OptFuncParams RPAR OptType FuncBody •

    $default  reduce using rule 13 (FuncDecl)


State 39

   19 FuncParams: FuncParams COMMA IDENTIFIER Type •

    $default  reduce using rule 19 (FuncParams)


State 40

    5 VarDecl: • VAR VarSpec
    6        | • VAR LPAR VarSpec SEMICOLON RPAR
   20 FuncBody: LBRACE VarsAndStatements • RBRACE
   21 VarsAndStatements: VarsAndStatements • SEMICOLON
   22                  | VarsAndStatements • VarDecl SEMICOLON
   23                  | VarsAndStatements • Statement SEMICOLON
   25 Statement: • IDENTIFIER ASSIGN Expr
   26          | • LBRACE StarStatementSc RBRACE
   27          | • IF Expr LBRACE StarStatementSc RBRACE OptElse
   28          | • FOR OptExpr LBRACE StarStatementSc RBRACE
   29          | • RETURN OptExpr
   30          | • FuncInvocation
   31          | • ParseArgs
   32          | • PRINT LPAR Expr RPAR
   33          | • PRINT LPAR STRLIT RPAR
   34          | • error
   41 ParseArgs: • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR

    error       shift, and go to state 41
    SEMICOLON   shift, and go to state 42
    LBRACE      shift, and go to state 43
    FOR         shift, and go to state 44
    IF          shift, and go to state 45
    VAR         shift, and go to state 7
    PRINT       shift, and go to state 46
    RBRACE      shift, and go to state 47
    RETURN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    VarDecl         go to state 50
    Statement       go to state 51
    ParseArgs       go to state 52
    FuncInvocation  go to state 53


State 41

   34 Statement: error •

    $default  reduce using rule 34 (Statement)


State 42

   21 VarsAndStatements: VarsAndStatements SEMICOLON •

    $default  reduce using rule 21 (VarsAndStatements)


State 43

   26 Statement: LBRACE • StarStatementSc RBRACE
   35 StarStatementSc: • StarStatementSc Statement SEMICOLON
   36                | ε •

    $default  reduce using rule 36 (StarStatementSc)

    StarStatementSc  go to state 54


State 44

   28 Statement: FOR • OptExpr LBRACE StarStatementSc RBRACE
   39 OptExpr: • Expr
   40        | ε •  [LBRACE]
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    $default  reduce using rule 40 (OptExpr)

    OptExpr         go to state 62
    FuncInvocation  go to state 63
    Expr            go to state 64


State 45

   27 Statement: IF • Expr LBRACE StarStatementSc RBRACE OptElse
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 65


State 46

   32 Statement: PRINT • LPAR Expr RPAR
   33          | PRINT • LPAR STRLIT RPAR

    LPAR  shift, and go to state 66


State 47

   20 FuncBody: LBRACE VarsAndStatements RBRACE •

    $default  reduce using rule 20 (FuncBody)


State 48

   29 Statement: RETURN • OptExpr
   39 OptExpr: • Expr
   40        | ε •  [SEMICOLON]
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    $default  reduce using rule 40 (OptExpr)

    OptExpr         go to state 67
    FuncInvocation  go to state 63
    Expr            go to state 64


State 49

   25 Statement: IDENTIFIER • ASSIGN Expr
   41 ParseArgs: IDENTIFIER • COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | IDENTIFIER • COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   43 FuncInvocation: IDENTIFIER • LPAR PosExpr RPAR
   44               | IDENTIFIER • LPAR error RPAR

    COMMA   shift, and go to state 68
    LPAR    shift, and go to state 69
    ASSIGN  shift, and go to state 70


State 50

   22 VarsAndStatements: VarsAndStatements VarDecl • SEMICOLON

    SEMICOLON  shift, and go to state 71


State 51

   23 VarsAndStatements: VarsAndStatements Statement • SEMICOLON

    SEMICOLON  shift, and go to state 72


State 52

   31 Statement: ParseArgs •

    $default  reduce using rule 31 (Statement)


State 53

   30 Statement: FuncInvocation •

    $default  reduce using rule 30 (Statement)


State 54

   25 Statement: • IDENTIFIER ASSIGN Expr
   26          | • LBRACE StarStatementSc RBRACE
   26          | LBRACE StarStatementSc • RBRACE
   27          | • IF Expr LBRACE StarStatementSc RBRACE OptElse
   28          | • FOR OptExpr LBRACE StarStatementSc RBRACE
   29          | • RETURN OptExpr
   30          | • FuncInvocation
   31          | • ParseArgs
   32          | • PRINT LPAR Expr RPAR
   33          | • PRINT LPAR STRLIT RPAR
   34          | • error
   35 StarStatementSc: StarStatementSc • Statement SEMICOLON
   41 ParseArgs: • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR

    error       shift, and go to state 41
    LBRACE      shift, and go to state 43
    FOR         shift, and go to state 44
    IF          shift, and go to state 45
    PRINT       shift, and go to state 46
    RBRACE      shift, and go to state 73
    RETURN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Statement       go to state 74
    ParseArgs       go to state 52
    FuncInvocation  go to state 53


State 55

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   61     | MINUS • Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 75


State 56

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   63     | PLUS • Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 76


State 57

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   68     | LPAR • Expr RPAR
   69     | • LPAR error RPAR
   69     | LPAR • error RPAR

    error       shift, and go to state 77
    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 78


State 58

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   62     | NOT • Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 79


State 59

   43 FuncInvocation: IDENTIFIER • LPAR PosExpr RPAR
   44               | IDENTIFIER • LPAR error RPAR
   66 Expr: IDENTIFIER •  [SEMICOLON, COMMA, STAR, DIV, MINUS, PLUS, EQ, GE, GT, LBRACE, LE, LT, MOD, NE, AND, OR, RPAR, RSQ]

    LPAR  shift, and go to state 69

    $default  reduce using rule 66 (Expr)


State 60

   64 Expr: NATURAL •

    $default  reduce using rule 64 (Expr)


State 61

   65 Expr: DECIMAL •

    $default  reduce using rule 65 (Expr)


State 62

   28 Statement: FOR OptExpr • LBRACE StarStatementSc RBRACE

    LBRACE  shift, and go to state 80


State 63

   67 Expr: FuncInvocation •

    $default  reduce using rule 67 (Expr)


State 64

   39 OptExpr: Expr •  [SEMICOLON, LBRACE]
   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 39 (OptExpr)


State 65

   27 Statement: IF Expr • LBRACE StarStatementSc RBRACE OptElse
   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR    shift, and go to state 81
    DIV     shift, and go to state 82
    MINUS   shift, and go to state 83
    PLUS    shift, and go to state 84
    EQ      shift, and go to state 85
    GE      shift, and go to state 86
    GT      shift, and go to state 87
    LBRACE  shift, and go to state 94
    LE      shift, and go to state 88
    LT      shift, and go to state 89
    MOD     shift, and go to state 90
    NE      shift, and go to state 91
    AND     shift, and go to state 92
    OR      shift, and go to state 93


State 66

   32 Statement: PRINT LPAR • Expr RPAR
   33          | PRINT LPAR • STRLIT RPAR
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    STRLIT      shift, and go to state 95
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 96


State 67

   29 Statement: RETURN OptExpr •

    $default  reduce using rule 29 (Statement)


State 68

   41 ParseArgs: IDENTIFIER COMMA • BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | IDENTIFIER COMMA • BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 97


State 69

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   43               | IDENTIFIER LPAR • PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   44               | IDENTIFIER LPAR • error RPAR
   45 PosExpr: • Expr
   46        | • Expr COMMA PosExpr
   47        | ε •  [RPAR]
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    error       shift, and go to state 98
    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    RPAR  reduce using rule 47 (PosExpr)

    FuncInvocation  go to state 63
    PosExpr         go to state 99
    Expr            go to state 100


State 70

   25 Statement: IDENTIFIER ASSIGN • Expr
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 101


State 71

   22 VarsAndStatements: VarsAndStatements VarDecl SEMICOLON •

    $default  reduce using rule 22 (VarsAndStatements)


State 72

   23 VarsAndStatements: VarsAndStatements Statement SEMICOLON •

    $default  reduce using rule 23 (VarsAndStatements)


State 73

   26 Statement: LBRACE StarStatementSc RBRACE •

    $default  reduce using rule 26 (Statement)


State 74

   35 StarStatementSc: StarStatementSc Statement • SEMICOLON

    SEMICOLON  shift, and go to state 102


State 75

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr
   61     | MINUS Expr •  [SEMICOLON, COMMA, STAR, DIV, MINUS, PLUS, EQ, GE, GT, LBRACE, LE, LT, MOD, NE, AND, OR, RPAR, RSQ]

    $default  reduce using rule 61 (Expr)

    Conflict between rule 61 and token STAR resolved as reduce (STAR < NOT).
    Conflict between rule 61 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 61 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 61 and token PLUS resolved as reduce (PLUS < NOT).
    Conflict between rule 61 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 61 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 61 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 61 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 61 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 61 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 61 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 61 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 61 and token OR resolved as reduce (OR < NOT).


State 76

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr
   63     | PLUS Expr •  [SEMICOLON, COMMA, STAR, DIV, MINUS, PLUS, EQ, GE, GT, LBRACE, LE, LT, MOD, NE, AND, OR, RPAR, RSQ]

    $default  reduce using rule 63 (Expr)

    Conflict between rule 63 and token STAR resolved as reduce (STAR < NOT).
    Conflict between rule 63 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 63 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 63 and token PLUS resolved as reduce (PLUS < NOT).
    Conflict between rule 63 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 63 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 63 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 63 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 63 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 63 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 63 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 63 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 63 and token OR resolved as reduce (OR < NOT).


State 77

   69 Expr: LPAR error • RPAR

    RPAR  shift, and go to state 103


State 78

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr
   68     | LPAR Expr • RPAR

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    RPAR   shift, and go to state 104


State 79

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr
   62     | NOT Expr •  [SEMICOLON, COMMA, STAR, DIV, MINUS, PLUS, EQ, GE, GT, LBRACE, LE, LT, MOD, NE, AND, OR, RPAR, RSQ]

    $default  reduce using rule 62 (Expr)

    Conflict between rule 62 and token STAR resolved as reduce (STAR < NOT).
    Conflict between rule 62 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 62 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 62 and token PLUS resolved as reduce (PLUS < NOT).
    Conflict between rule 62 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 62 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 62 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 62 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 62 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 62 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 62 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 62 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 62 and token OR resolved as reduce (OR < NOT).


State 80

   28 Statement: FOR OptExpr LBRACE • StarStatementSc RBRACE
   35 StarStatementSc: • StarStatementSc Statement SEMICOLON
   36                | ε •

    $default  reduce using rule 36 (StarStatementSc)

    StarStatementSc  go to state 105


State 81

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   58     | Expr STAR • Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 106


State 82

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   59     | Expr DIV • Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 107


State 83

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   57     | Expr MINUS • Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 108


State 84

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   56     | Expr PLUS • Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 109


State 85

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   52     | Expr EQ • Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 110


State 86

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   55     | Expr GE • Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 111


State 87

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   51     | Expr GT • Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 112


State 88

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   54     | Expr LE • Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 113


State 89

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   50     | Expr LT • Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 114


State 90

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   60     | Expr MOD • Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 115


State 91

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   53     | Expr NE • Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 116


State 92

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   49     | Expr AND • Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 117


State 93

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   48     | Expr OR • Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 118


State 94

   27 Statement: IF Expr LBRACE • StarStatementSc RBRACE OptElse
   35 StarStatementSc: • StarStatementSc Statement SEMICOLON
   36                | ε •

    $default  reduce using rule 36 (StarStatementSc)

    StarStatementSc  go to state 119


State 95

   33 Statement: PRINT LPAR STRLIT • RPAR

    RPAR  shift, and go to state 120


State 96

   32 Statement: PRINT LPAR Expr • RPAR
   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    RPAR   shift, and go to state 121


State 97

   41 ParseArgs: IDENTIFIER COMMA BLANKID • ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | IDENTIFIER COMMA BLANKID • ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 122


State 98

   44 FuncInvocation: IDENTIFIER LPAR error • RPAR

    RPAR  shift, and go to state 123


State 99

   43 FuncInvocation: IDENTIFIER LPAR PosExpr • RPAR

    RPAR  shift, and go to state 124


State 100

   45 PosExpr: Expr •  [RPAR]
   46        | Expr • COMMA PosExpr
   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    COMMA  shift, and go to state 125
    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 45 (PosExpr)


State 101

   25 Statement: IDENTIFIER ASSIGN Expr •  [SEMICOLON]
   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 25 (Statement)


State 102

   35 StarStatementSc: StarStatementSc Statement SEMICOLON •

    $default  reduce using rule 35 (StarStatementSc)


State 103

   69 Expr: LPAR error RPAR •

    $default  reduce using rule 69 (Expr)


State 104

   68 Expr: LPAR Expr RPAR •

    $default  reduce using rule 68 (Expr)


State 105

   25 Statement: • IDENTIFIER ASSIGN Expr
   26          | • LBRACE StarStatementSc RBRACE
   27          | • IF Expr LBRACE StarStatementSc RBRACE OptElse
   28          | • FOR OptExpr LBRACE StarStatementSc RBRACE
   28          | FOR OptExpr LBRACE StarStatementSc • RBRACE
   29          | • RETURN OptExpr
   30          | • FuncInvocation
   31          | • ParseArgs
   32          | • PRINT LPAR Expr RPAR
   33          | • PRINT LPAR STRLIT RPAR
   34          | • error
   35 StarStatementSc: StarStatementSc • Statement SEMICOLON
   41 ParseArgs: • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR

    error       shift, and go to state 41
    LBRACE      shift, and go to state 43
    FOR         shift, and go to state 44
    IF          shift, and go to state 45
    PRINT       shift, and go to state 46
    RBRACE      shift, and go to state 126
    RETURN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Statement       go to state 74
    ParseArgs       go to state 52
    FuncInvocation  go to state 53


State 106

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   58     | Expr STAR Expr •  [SEMICOLON, COMMA, STAR, DIV, MINUS, PLUS, EQ, GE, GT, LBRACE, LE, LT, MOD, NE, AND, OR, RPAR, RSQ]
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    $default  reduce using rule 58 (Expr)

    Conflict between rule 58 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 58 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 58 and token MINUS resolved as reduce (MINUS < STAR).
    Conflict between rule 58 and token PLUS resolved as reduce (PLUS < STAR).
    Conflict between rule 58 and token EQ resolved as reduce (EQ < STAR).
    Conflict between rule 58 and token GE resolved as reduce (GE < STAR).
    Conflict between rule 58 and token GT resolved as reduce (GT < STAR).
    Conflict between rule 58 and token LE resolved as reduce (LE < STAR).
    Conflict between rule 58 and token LT resolved as reduce (LT < STAR).
    Conflict between rule 58 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 58 and token NE resolved as reduce (NE < STAR).
    Conflict between rule 58 and token AND resolved as reduce (AND < STAR).
    Conflict between rule 58 and token OR resolved as reduce (OR < STAR).


State 107

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   59     | Expr DIV Expr •  [SEMICOLON, COMMA, STAR, DIV, MINUS, PLUS, EQ, GE, GT, LBRACE, LE, LT, MOD, NE, AND, OR, RPAR, RSQ]
   60     | Expr • MOD Expr

    $default  reduce using rule 59 (Expr)

    Conflict between rule 59 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 59 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 59 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 59 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 59 and token EQ resolved as reduce (EQ < DIV).
    Conflict between rule 59 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 59 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 59 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 59 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 59 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 59 and token NE resolved as reduce (NE < DIV).
    Conflict between rule 59 and token AND resolved as reduce (AND < DIV).
    Conflict between rule 59 and token OR resolved as reduce (OR < DIV).


State 108

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   57     | Expr MINUS Expr •  [SEMICOLON, COMMA, MINUS, PLUS, EQ, GE, GT, LBRACE, LE, LT, NE, AND, OR, RPAR, RSQ]
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 90

    $default  reduce using rule 57 (Expr)

    Conflict between rule 57 and token STAR resolved as shift (MINUS < STAR).
    Conflict between rule 57 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 57 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 57 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 57 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 57 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 57 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 57 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 57 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 57 and token MOD resolved as shift (MINUS < MOD).
    Conflict between rule 57 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 57 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 57 and token OR resolved as reduce (OR < MINUS).


State 109

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   56     | Expr PLUS Expr •  [SEMICOLON, COMMA, MINUS, PLUS, EQ, GE, GT, LBRACE, LE, LT, NE, AND, OR, RPAR, RSQ]
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 90

    $default  reduce using rule 56 (Expr)

    Conflict between rule 56 and token STAR resolved as shift (PLUS < STAR).
    Conflict between rule 56 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 56 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 56 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 56 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 56 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 56 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 56 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 56 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 56 and token MOD resolved as shift (PLUS < MOD).
    Conflict between rule 56 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 56 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 56 and token OR resolved as reduce (OR < PLUS).


State 110

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   52     | Expr EQ Expr •  [SEMICOLON, COMMA, EQ, LBRACE, NE, AND, OR, RPAR, RSQ]
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90

    $default  reduce using rule 52 (Expr)

    Conflict between rule 52 and token STAR resolved as shift (EQ < STAR).
    Conflict between rule 52 and token DIV resolved as shift (EQ < DIV).
    Conflict between rule 52 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 52 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 52 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 52 and token GE resolved as shift (EQ < GE).
    Conflict between rule 52 and token GT resolved as shift (EQ < GT).
    Conflict between rule 52 and token LE resolved as shift (EQ < LE).
    Conflict between rule 52 and token LT resolved as shift (EQ < LT).
    Conflict between rule 52 and token MOD resolved as shift (EQ < MOD).
    Conflict between rule 52 and token NE resolved as reduce (%left NE).
    Conflict between rule 52 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 52 and token OR resolved as reduce (OR < EQ).


State 111

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   55     | Expr GE Expr •  [SEMICOLON, COMMA, EQ, GE, GT, LBRACE, LE, LT, NE, AND, OR, RPAR, RSQ]
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 55 (Expr)

    Conflict between rule 55 and token STAR resolved as shift (GE < STAR).
    Conflict between rule 55 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 55 and token MINUS resolved as shift (GE < MINUS).
    Conflict between rule 55 and token PLUS resolved as shift (GE < PLUS).
    Conflict between rule 55 and token EQ resolved as reduce (EQ < GE).
    Conflict between rule 55 and token GE resolved as reduce (%left GE).
    Conflict between rule 55 and token GT resolved as reduce (%left GT).
    Conflict between rule 55 and token LE resolved as reduce (%left LE).
    Conflict between rule 55 and token LT resolved as reduce (%left LT).
    Conflict between rule 55 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 55 and token NE resolved as reduce (NE < GE).
    Conflict between rule 55 and token AND resolved as reduce (AND < GE).
    Conflict between rule 55 and token OR resolved as reduce (OR < GE).


State 112

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   51     | Expr GT Expr •  [SEMICOLON, COMMA, EQ, GE, GT, LBRACE, LE, LT, NE, AND, OR, RPAR, RSQ]
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 51 (Expr)

    Conflict between rule 51 and token STAR resolved as shift (GT < STAR).
    Conflict between rule 51 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 51 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 51 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 51 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 51 and token GE resolved as reduce (%left GE).
    Conflict between rule 51 and token GT resolved as reduce (%left GT).
    Conflict between rule 51 and token LE resolved as reduce (%left LE).
    Conflict between rule 51 and token LT resolved as reduce (%left LT).
    Conflict between rule 51 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 51 and token NE resolved as reduce (NE < GT).
    Conflict between rule 51 and token AND resolved as reduce (AND < GT).
    Conflict between rule 51 and token OR resolved as reduce (OR < GT).


State 113

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   54     | Expr LE Expr •  [SEMICOLON, COMMA, EQ, GE, GT, LBRACE, LE, LT, NE, AND, OR, RPAR, RSQ]
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 54 (Expr)

    Conflict between rule 54 and token STAR resolved as shift (LE < STAR).
    Conflict between rule 54 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 54 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 54 and token PLUS resolved as shift (LE < PLUS).
    Conflict between rule 54 and token EQ resolved as reduce (EQ < LE).
    Conflict between rule 54 and token GE resolved as reduce (%left GE).
    Conflict between rule 54 and token GT resolved as reduce (%left GT).
    Conflict between rule 54 and token LE resolved as reduce (%left LE).
    Conflict between rule 54 and token LT resolved as reduce (%left LT).
    Conflict between rule 54 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 54 and token NE resolved as reduce (NE < LE).
    Conflict between rule 54 and token AND resolved as reduce (AND < LE).
    Conflict between rule 54 and token OR resolved as reduce (OR < LE).


State 114

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   50     | Expr LT Expr •  [SEMICOLON, COMMA, EQ, GE, GT, LBRACE, LE, LT, NE, AND, OR, RPAR, RSQ]
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 50 (Expr)

    Conflict between rule 50 and token STAR resolved as shift (LT < STAR).
    Conflict between rule 50 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 50 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 50 and token PLUS resolved as shift (LT < PLUS).
    Conflict between rule 50 and token EQ resolved as reduce (EQ < LT).
    Conflict between rule 50 and token GE resolved as reduce (%left GE).
    Conflict between rule 50 and token GT resolved as reduce (%left GT).
    Conflict between rule 50 and token LE resolved as reduce (%left LE).
    Conflict between rule 50 and token LT resolved as reduce (%left LT).
    Conflict between rule 50 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 50 and token NE resolved as reduce (NE < LT).
    Conflict between rule 50 and token AND resolved as reduce (AND < LT).
    Conflict between rule 50 and token OR resolved as reduce (OR < LT).


State 115

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr
   60     | Expr MOD Expr •  [SEMICOLON, COMMA, STAR, DIV, MINUS, PLUS, EQ, GE, GT, LBRACE, LE, LT, MOD, NE, AND, OR, RPAR, RSQ]

    $default  reduce using rule 60 (Expr)

    Conflict between rule 60 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 60 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 60 and token MINUS resolved as reduce (MINUS < MOD).
    Conflict between rule 60 and token PLUS resolved as reduce (PLUS < MOD).
    Conflict between rule 60 and token EQ resolved as reduce (EQ < MOD).
    Conflict between rule 60 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 60 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 60 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 60 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 60 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 60 and token NE resolved as reduce (NE < MOD).
    Conflict between rule 60 and token AND resolved as reduce (AND < MOD).
    Conflict between rule 60 and token OR resolved as reduce (OR < MOD).


State 116

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   53     | Expr NE Expr •  [SEMICOLON, COMMA, EQ, LBRACE, NE, AND, OR, RPAR, RSQ]
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90

    $default  reduce using rule 53 (Expr)

    Conflict between rule 53 and token STAR resolved as shift (NE < STAR).
    Conflict between rule 53 and token DIV resolved as shift (NE < DIV).
    Conflict between rule 53 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 53 and token PLUS resolved as shift (NE < PLUS).
    Conflict between rule 53 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 53 and token GE resolved as shift (NE < GE).
    Conflict between rule 53 and token GT resolved as shift (NE < GT).
    Conflict between rule 53 and token LE resolved as shift (NE < LE).
    Conflict between rule 53 and token LT resolved as shift (NE < LT).
    Conflict between rule 53 and token MOD resolved as shift (NE < MOD).
    Conflict between rule 53 and token NE resolved as reduce (%left NE).
    Conflict between rule 53 and token AND resolved as reduce (AND < NE).
    Conflict between rule 53 and token OR resolved as reduce (OR < NE).


State 117

   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   49     | Expr AND Expr •  [SEMICOLON, COMMA, LBRACE, AND, OR, RPAR, RSQ]
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91

    $default  reduce using rule 49 (Expr)

    Conflict between rule 49 and token STAR resolved as shift (AND < STAR).
    Conflict between rule 49 and token DIV resolved as shift (AND < DIV).
    Conflict between rule 49 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 49 and token PLUS resolved as shift (AND < PLUS).
    Conflict between rule 49 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 49 and token GE resolved as shift (AND < GE).
    Conflict between rule 49 and token GT resolved as shift (AND < GT).
    Conflict between rule 49 and token LE resolved as shift (AND < LE).
    Conflict between rule 49 and token LT resolved as shift (AND < LT).
    Conflict between rule 49 and token MOD resolved as shift (AND < MOD).
    Conflict between rule 49 and token NE resolved as shift (AND < NE).
    Conflict between rule 49 and token AND resolved as reduce (%left AND).
    Conflict between rule 49 and token OR resolved as reduce (OR < AND).


State 118

   48 Expr: Expr • OR Expr
   48     | Expr OR Expr •  [SEMICOLON, COMMA, LBRACE, OR, RPAR, RSQ]
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92

    $default  reduce using rule 48 (Expr)

    Conflict between rule 48 and token STAR resolved as shift (OR < STAR).
    Conflict between rule 48 and token DIV resolved as shift (OR < DIV).
    Conflict between rule 48 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 48 and token PLUS resolved as shift (OR < PLUS).
    Conflict between rule 48 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 48 and token GE resolved as shift (OR < GE).
    Conflict between rule 48 and token GT resolved as shift (OR < GT).
    Conflict between rule 48 and token LE resolved as shift (OR < LE).
    Conflict between rule 48 and token LT resolved as shift (OR < LT).
    Conflict between rule 48 and token MOD resolved as shift (OR < MOD).
    Conflict between rule 48 and token NE resolved as shift (OR < NE).
    Conflict between rule 48 and token AND resolved as shift (OR < AND).
    Conflict between rule 48 and token OR resolved as reduce (%left OR).


State 119

   25 Statement: • IDENTIFIER ASSIGN Expr
   26          | • LBRACE StarStatementSc RBRACE
   27          | • IF Expr LBRACE StarStatementSc RBRACE OptElse
   27          | IF Expr LBRACE StarStatementSc • RBRACE OptElse
   28          | • FOR OptExpr LBRACE StarStatementSc RBRACE
   29          | • RETURN OptExpr
   30          | • FuncInvocation
   31          | • ParseArgs
   32          | • PRINT LPAR Expr RPAR
   33          | • PRINT LPAR STRLIT RPAR
   34          | • error
   35 StarStatementSc: StarStatementSc • Statement SEMICOLON
   41 ParseArgs: • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR

    error       shift, and go to state 41
    LBRACE      shift, and go to state 43
    FOR         shift, and go to state 44
    IF          shift, and go to state 45
    PRINT       shift, and go to state 46
    RBRACE      shift, and go to state 127
    RETURN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Statement       go to state 74
    ParseArgs       go to state 52
    FuncInvocation  go to state 53


State 120

   33 Statement: PRINT LPAR STRLIT RPAR •

    $default  reduce using rule 33 (Statement)


State 121

   32 Statement: PRINT LPAR Expr RPAR •

    $default  reduce using rule 32 (Statement)


State 122

   41 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN • PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | IDENTIFIER COMMA BLANKID ASSIGN • PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 128


State 123

   44 FuncInvocation: IDENTIFIER LPAR error RPAR •

    $default  reduce using rule 44 (FuncInvocation)


State 124

   43 FuncInvocation: IDENTIFIER LPAR PosExpr RPAR •

    $default  reduce using rule 43 (FuncInvocation)


State 125

   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   45 PosExpr: • Expr
   46        | • Expr COMMA PosExpr
   46        | Expr COMMA • PosExpr
   47        | ε •  [RPAR]
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    $default  reduce using rule 47 (PosExpr)

    FuncInvocation  go to state 63
    PosExpr         go to state 129
    Expr            go to state 100


State 126

   28 Statement: FOR OptExpr LBRACE StarStatementSc RBRACE •

    $default  reduce using rule 28 (Statement)


State 127

   27 Statement: IF Expr LBRACE StarStatementSc RBRACE • OptElse
   37 OptElse: • ELSE LBRACE StarStatementSc RBRACE
   38        | ε •  [SEMICOLON]

    ELSE  shift, and go to state 130

    $default  reduce using rule 38 (OptElse)

    OptElse  go to state 131


State 128

   41 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT • LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | IDENTIFIER COMMA BLANKID ASSIGN PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 132


State 129

   46 PosExpr: Expr COMMA PosExpr •

    $default  reduce using rule 46 (PosExpr)


State 130

   37 OptElse: ELSE • LBRACE StarStatementSc RBRACE

    LBRACE  shift, and go to state 133


State 131

   27 Statement: IF Expr LBRACE StarStatementSc RBRACE OptElse •

    $default  reduce using rule 27 (Statement)


State 132

   41 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR • CMDARGS LSQ Expr RSQ RPAR
   42          | IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR • error RPAR

    error    shift, and go to state 134
    CMDARGS  shift, and go to state 135


State 133

   35 StarStatementSc: • StarStatementSc Statement SEMICOLON
   36                | ε •
   37 OptElse: ELSE LBRACE • StarStatementSc RBRACE

    $default  reduce using rule 36 (StarStatementSc)

    StarStatementSc  go to state 136


State 134

   42 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 137


State 135

   41 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 138


State 136

   25 Statement: • IDENTIFIER ASSIGN Expr
   26          | • LBRACE StarStatementSc RBRACE
   27          | • IF Expr LBRACE StarStatementSc RBRACE OptElse
   28          | • FOR OptExpr LBRACE StarStatementSc RBRACE
   29          | • RETURN OptExpr
   30          | • FuncInvocation
   31          | • ParseArgs
   32          | • PRINT LPAR Expr RPAR
   33          | • PRINT LPAR STRLIT RPAR
   34          | • error
   35 StarStatementSc: StarStatementSc • Statement SEMICOLON
   37 OptElse: ELSE LBRACE StarStatementSc • RBRACE
   41 ParseArgs: • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | • IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR

    error       shift, and go to state 41
    LBRACE      shift, and go to state 43
    FOR         shift, and go to state 44
    IF          shift, and go to state 45
    PRINT       shift, and go to state 46
    RBRACE      shift, and go to state 139
    RETURN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Statement       go to state 74
    ParseArgs       go to state 52
    FuncInvocation  go to state 53


State 137

   42 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR •

    $default  reduce using rule 42 (ParseArgs)


State 138

   41 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ • Expr RSQ RPAR
   43 FuncInvocation: • IDENTIFIER LPAR PosExpr RPAR
   44               | • IDENTIFIER LPAR error RPAR
   48 Expr: • Expr OR Expr
   49     | • Expr AND Expr
   50     | • Expr LT Expr
   51     | • Expr GT Expr
   52     | • Expr EQ Expr
   53     | • Expr NE Expr
   54     | • Expr LE Expr
   55     | • Expr GE Expr
   56     | • Expr PLUS Expr
   57     | • Expr MINUS Expr
   58     | • Expr STAR Expr
   59     | • Expr DIV Expr
   60     | • Expr MOD Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • PLUS Expr
   64     | • NATURAL
   65     | • DECIMAL
   66     | • IDENTIFIER
   67     | • FuncInvocation
   68     | • LPAR Expr RPAR
   69     | • LPAR error RPAR

    MINUS       shift, and go to state 55
    PLUS        shift, and go to state 56
    LPAR        shift, and go to state 57
    NOT         shift, and go to state 58
    IDENTIFIER  shift, and go to state 59
    NATURAL     shift, and go to state 60
    DECIMAL     shift, and go to state 61

    FuncInvocation  go to state 63
    Expr            go to state 140


State 139

   37 OptElse: ELSE LBRACE StarStatementSc RBRACE •

    $default  reduce using rule 37 (OptElse)


State 140

   41 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr • RSQ RPAR
   48 Expr: Expr • OR Expr
   49     | Expr • AND Expr
   50     | Expr • LT Expr
   51     | Expr • GT Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • PLUS Expr
   57     | Expr • MINUS Expr
   58     | Expr • STAR Expr
   59     | Expr • DIV Expr
   60     | Expr • MOD Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    RSQ    shift, and go to state 141


State 141

   41 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 142


State 142

   41 ParseArgs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR •

    $default  reduce using rule 41 (ParseArgs)
