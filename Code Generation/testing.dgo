package main;

// PROBLEM WHEN RETURNING AT THE END OF A FOR BLOCK WITH CONDITION
func factorial(n int, acc int) int {
    if n == 0 {
        return acc;
    } else {
        return factorial(n - 1, n * acc);
    }
}
func main() { 
    var i int;
    var b1, b2, b3 bool;
    i = 1    
    
    b3 = 1==1;
    for i < 1{
        fmt.Println(i);
        b1 = b2 && b3;
    
        b3 = (b1 == b2) || b3
        b1 = !(b1 == b2) && !b3 || i > 22 && b1

        i = i+1
    }
}

// OPTCODE PROBLEMS HAS_RETURNED_BRANCH CANNOT BE GLOBAL
// AS NESTED BLOCKS MIGHT TELL INCORRECTLY THEIR PARENTS THAT THEY
// HAVE RETURNED
